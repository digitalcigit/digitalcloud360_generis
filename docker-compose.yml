version: '3.8'

services:
  # =============================================================================
  # Genesis AI Deep Agents Service
  # =============================================================================
  genesis-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: genesis-api
    env_file:
      - .env
    environment:
      - TEST_DATABASE_URL=postgresql+asyncpg://test_user:test_password@test-db:5432/test_db
    restart: unless-stopped
    ports:
      - "8002:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      test-db:
        condition: service_healthy
    volumes:
      - ./:/app
      - ./logs:/app/logs
    networks:
      - genesis-ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # =============================================================================
  # PostgreSQL Database Dédiée
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: genesis_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: genesis_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - genesis_ai_db_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5435:5432"
    networks:
      - genesis-ai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U genesis_user -d genesis_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # Redis Virtual File System
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - genesis_ai_redis_data:/data
    ports:
      - "6382:6379"
    networks:
      - genesis-ai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # =============================================================================
  # Test Database
  # =============================================================================
  test-db:
    image: postgres:15-alpine
    container_name: test-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
    networks:
      - genesis-ai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # Monitoring Prometheus (Optionnel)
  # =============================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: genesis-ai-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - genesis-ai-network
    profiles:
      - monitoring

  # =============================================================================
  # Grafana Dashboard (Optionnel)
  # =============================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: genesis-ai-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - genesis-ai-network
    profiles:
      - monitoring

# =============================================================================
# Volumes Persistants
# =============================================================================
volumes:
  genesis_ai_db_data:
    driver: local
  genesis_ai_redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# =============================================================================
# Réseau Dédié
# =============================================================================
networks:
  genesis-ai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
